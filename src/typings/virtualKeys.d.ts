export enum VirtualKeyCodes {
    VK_LBUTTON = 0x01, // Left mouse button debugger eval code:5:17
    VK_RBUTTON = 0x02, // Right mouse button debugger eval code:5:17
    VK_CANCEL = 0x03, // Control-break processing debugger eval code:5:17
    VK_MBUTTON = 0x04, // Middle mouse button (three-button mouse) debugger eval code:5:17
    VK_XBUTTON1 = 0x05, // X1 mouse button debugger eval code:5:17
    VK_XBUTTON2 = 0x06, // X2 mouse button debugger eval code:5:17
    // - = 0x07, // Undefined debugger eval code:5:17
    VK_BACK = 0x08, // BACKSPACE key debugger eval code:5:17
    VK_TAB = 0x09, // TAB key debugger eval code:5:17
    // - = 0x0A-0B, // Reserved debugger eval code:5:17
    VK_CLEAR = 0x0C, // CLEAR key debugger eval code:5:17
    VK_RETURN = 0x0D, // ENTER key debugger eval code:5:17
    // - = 0x0E-0F, // Undefined debugger eval code:5:17
    VK_SHIFT = 0x10, // SHIFT key debugger eval code:5:17
    VK_CONTROL = 0x11, // CTRL key debugger eval code:5:17
    VK_MENU = 0x12, // ALT key debugger eval code:5:17
    VK_PAUSE = 0x13, // PAUSE key debugger eval code:5:17
    VK_CAPITAL = 0x14, // CAPS LOCK key debugger eval code:5:17
    VK_KANA = 0x15, // IME Kana mode debugger eval code:5:17
    VK_HANGUEL = 0x15, // IME Hanguel mode (maintained for compatibility; use VK_HANGUL) debugger eval code:5:17
    VK_HANGUL = 0x15, // IME Hangul mode debugger eval code:5:17
    VK_IME_ON = 0x16, // IME On debugger eval code:5:17
    VK_JUNJA = 0x17, // IME Junja mode debugger eval code:5:17
    VK_FINAL = 0x18, // IME final mode debugger eval code:5:17
    VK_HANJA = 0x19, // IME Hanja mode debugger eval code:5:17
    VK_KANJI = 0x19, // IME Kanji mode debugger eval code:5:17
    VK_IME_OFF = 0x1A, // IME Off debugger eval code:5:17
    VK_ESCAPE = 0x1B, // ESC key debugger eval code:5:17
    VK_CONVERT = 0x1C, // IME convert debugger eval code:5:17
    VK_NONCONVERT = 0x1D, // IME nonconvert debugger eval code:5:17
    VK_ACCEPT = 0x1E, // IME accept debugger eval code:5:17
    VK_MODECHANGE = 0x1F, // IME mode change request debugger eval code:5:17
    VK_SPACE = 0x20, // SPACEBAR debugger eval code:5:17
    VK_PRIOR = 0x21, // PAGE UP key debugger eval code:5:17
    VK_NEXT = 0x22, // PAGE DOWN key debugger eval code:5:17
    VK_END = 0x23, // END key debugger eval code:5:17
    VK_HOME = 0x24, // HOME key debugger eval code:5:17
    VK_LEFT = 0x25, // LEFT ARROW key debugger eval code:5:17
    VK_UP = 0x26, // UP ARROW key debugger eval code:5:17
    VK_RIGHT = 0x27, // RIGHT ARROW key debugger eval code:5:17
    VK_DOWN = 0x28, // DOWN ARROW key debugger eval code:5:17
    VK_SELECT = 0x29, // SELECT key debugger eval code:5:17
    VK_PRINT = 0x2A, // PRINT key debugger eval code:5:17
    VK_EXECUTE = 0x2B, // EXECUTE key debugger eval code:5:17
    VK_SNAPSHOT = 0x2C, // PRINT SCREEN key debugger eval code:5:17
    VK_INSERT = 0x2D, // INS key debugger eval code:5:17
    VK_DELETE = 0x2E, // DEL key debugger eval code:5:17
    VK_HELP = 0x2F, // HELP key debugger eval code:5:17
    VK_0 = 0x30, // 0 key debugger eval code:5:17
    VK_1 = 0x31, // 1 key debugger eval code:5:17
    VK_2 = 0x32, // 2 key debugger eval code:5:17
    VK_3 = 0x33, // 3 key debugger eval code:5:17
    VK_4 = 0x34, // 4 key debugger eval code:5:17
    VK_5 = 0x35, // 5 key debugger eval code:5:17
    VK_6 = 0x36, // 6 key debugger eval code:5:17
    VK_7 = 0x37, // 7 key debugger eval code:5:17
    VK_8 = 0x38, // 8 key debugger eval code:5:17
    VK_9 = 0x39, // 9 key debugger eval code:5:17
    // = 0x3A-40, // Undefined debugger eval code:5:17
    VK_A = 0x41, // A key debugger eval code:5:17
    VK_B = 0x42, // B key debugger eval code:5:17
    VK_C = 0x43, // C key debugger eval code:5:17
    VK_D = 0x44, // D key debugger eval code:5:17
    VK_E = 0x45, // E key debugger eval code:5:17
    VK_F = 0x46, // F key debugger eval code:5:17
    VK_G = 0x47, // G key debugger eval code:5:17
    VK_H = 0x48, // H key debugger eval code:5:17
    VK_I = 0x49, // I key debugger eval code:5:17
    VK_J = 0x4A, // J key debugger eval code:5:17
    VK_K = 0x4B, // K key debugger eval code:5:17
    VK_L = 0x4C, // L key debugger eval code:5:17
    VK_M = 0x4D, // M key debugger eval code:5:17
    VK_N = 0x4E, // N key debugger eval code:5:17
    VK_O = 0x4F, // O key debugger eval code:5:17
    VK_P = 0x50, // P key debugger eval code:5:17
    VK_Q = 0x51, // Q key debugger eval code:5:17
    VK_R = 0x52, // R key debugger eval code:5:17
    VK_S = 0x53, // S key debugger eval code:5:17
    VK_T = 0x54, // T key debugger eval code:5:17
    VK_U = 0x55, // U key debugger eval code:5:17
    VK_V = 0x56, // V key debugger eval code:5:17
    VK_W = 0x57, // W key debugger eval code:5:17
    VK_X = 0x58, // X key debugger eval code:5:17
    VK_Y = 0x59, // Y key debugger eval code:5:17
    VK_Z = 0x5A, // Z key debugger eval code:5:17
    VK_LWIN = 0x5B, // Left Windows key (Natural keyboard) debugger eval code:5:17
    VK_RWIN = 0x5C, // Right Windows key (Natural keyboard) debugger eval code:5:17
    VK_APPS = 0x5D, // Applications key (Natural keyboard) debugger eval code:5:17
    // - = 0x5E, // Reserved debugger eval code:5:17
    VK_SLEEP = 0x5F, // Computer Sleep key debugger eval code:5:17
    VK_NUMPAD0 = 0x60, // Numeric keypad 0 key debugger eval code:5:17
    VK_NUMPAD1 = 0x61, // Numeric keypad 1 key debugger eval code:5:17
    VK_NUMPAD2 = 0x62, // Numeric keypad 2 key debugger eval code:5:17
    VK_NUMPAD3 = 0x63, // Numeric keypad 3 key debugger eval code:5:17
    VK_NUMPAD4 = 0x64, // Numeric keypad 4 key debugger eval code:5:17
    VK_NUMPAD5 = 0x65, // Numeric keypad 5 key debugger eval code:5:17
    VK_NUMPAD6 = 0x66, // Numeric keypad 6 key debugger eval code:5:17
    VK_NUMPAD7 = 0x67, // Numeric keypad 7 key debugger eval code:5:17
    VK_NUMPAD8 = 0x68, // Numeric keypad 8 key debugger eval code:5:17
    VK_NUMPAD9 = 0x69, // Numeric keypad 9 key debugger eval code:5:17
    VK_MULTIPLY = 0x6A, // Multiply key debugger eval code:5:17
    VK_ADD = 0x6B, // Add key debugger eval code:5:17
    VK_SEPARATOR = 0x6C, // Separator key debugger eval code:5:17
    VK_SUBTRACT = 0x6D, // Subtract key debugger eval code:5:17
    VK_DECIMAL = 0x6E, // Decimal key debugger eval code:5:17
    VK_DIVIDE = 0x6F, // Divide key debugger eval code:5:17
    VK_F1 = 0x70, // F1 key debugger eval code:5:17
    VK_F2 = 0x71, // F2 key debugger eval code:5:17
    VK_F3 = 0x72, // F3 key debugger eval code:5:17
    VK_F4 = 0x73, // F4 key debugger eval code:5:17
    VK_F5 = 0x74, // F5 key debugger eval code:5:17
    VK_F6 = 0x75, // F6 key debugger eval code:5:17
    VK_F7 = 0x76, // F7 key debugger eval code:5:17
    VK_F8 = 0x77, // F8 key debugger eval code:5:17
    VK_F9 = 0x78, // F9 key debugger eval code:5:17
    VK_F10 = 0x79, // F10 key debugger eval code:5:17
    VK_F11 = 0x7A, // F11 key debugger eval code:5:17
    VK_F12 = 0x7B, // F12 key debugger eval code:5:17
    VK_F13 = 0x7C, // F13 key debugger eval code:5:17
    VK_F14 = 0x7D, // F14 key debugger eval code:5:17
    VK_F15 = 0x7E, // F15 key debugger eval code:5:17
    VK_F16 = 0x7F, // F16 key debugger eval code:5:17
    VK_F17 = 0x80, // F17 key debugger eval code:5:17
    VK_F18 = 0x81, // F18 key debugger eval code:5:17
    VK_F19 = 0x82, // F19 key debugger eval code:5:17
    VK_F20 = 0x83, // F20 key debugger eval code:5:17
    VK_F21 = 0x84, // F21 key debugger eval code:5:17
    VK_F22 = 0x85, // F22 key debugger eval code:5:17
    VK_F23 = 0x86, // F23 key debugger eval code:5:17
    VK_F24 = 0x87, // F24 key debugger eval code:5:17
    // - = 0x88-8F, // Unassigned debugger eval code:5:17
    VK_NUMLOCK = 0x90, // NUM LOCK key debugger eval code:5:17
    VK_SCROLL = 0x91, // SCROLL LOCK key debugger eval code:5:17
    // = 0x92-96, // OEM specific debugger eval code:5:17
    // - = 0x97-9F, // Unassigned debugger eval code:5:17
    VK_LSHIFT = 0xA0, // Left SHIFT key debugger eval code:5:17
    VK_RSHIFT = 0xA1, // Right SHIFT key debugger eval code:5:17
    VK_LCONTROL = 0xA2, // Left CONTROL key debugger eval code:5:17
    VK_RCONTROL = 0xA3, // Right CONTROL key debugger eval code:5:17
    VK_LMENU = 0xA4, // Left ALT key debugger eval code:5:17
    VK_RMENU = 0xA5, // Right ALT key debugger eval code:5:17
    VK_BROWSER_BACK = 0xA6, // Browser Back key debugger eval code:5:17
    VK_BROWSER_FORWARD = 0xA7, // Browser Forward key debugger eval code:5:17
    VK_BROWSER_REFRESH = 0xA8, // Browser Refresh key debugger eval code:5:17
    VK_BROWSER_STOP = 0xA9, // Browser Stop key debugger eval code:5:17
    VK_BROWSER_SEARCH = 0xAA, // Browser Search key debugger eval code:5:17
    VK_BROWSER_FAVORITES = 0xAB, // Browser Favorites key debugger eval code:5:17
    VK_BROWSER_HOME = 0xAC, // Browser Start and Home key debugger eval code:5:17
    VK_VOLUME_MUTE = 0xAD, // Volume Mute key debugger eval code:5:17
    VK_VOLUME_DOWN = 0xAE, // Volume Down key debugger eval code:5:17
    VK_VOLUME_UP = 0xAF, // Volume Up key debugger eval code:5:17
    VK_MEDIA_NEXT_TRACK = 0xB0, // Next Track key debugger eval code:5:17
    VK_MEDIA_PREV_TRACK = 0xB1, // Previous Track key debugger eval code:5:17
    VK_MEDIA_STOP = 0xB2, // Stop Media key debugger eval code:5:17
    VK_MEDIA_PLAY_PAUSE = 0xB3, // Play/Pause Media key debugger eval code:5:17
    VK_LAUNCH_MAIL = 0xB4, // Start Mail key debugger eval code:5:17
    VK_LAUNCH_MEDIA_SELECT = 0xB5, // Select Media key debugger eval code:5:17
    VK_LAUNCH_APP1 = 0xB6, // Start Application 1 key debugger eval code:5:17
    VK_LAUNCH_APP2 = 0xB7, // Start Application 2 key debugger eval code:5:17
    // - = 0xB8-B9, // Reserved debugger eval code:5:17
    VK_OEM_1 = 0xBA, // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ';:' key debugger eval code:5:17
    VK_OEM_PLUS = 0xBB, // For any country/region, the '+' key debugger eval code:5:17
    VK_OEM_COMMA = 0xBC, // For any country/region, the ',' key debugger eval code:5:17
    VK_OEM_MINUS = 0xBD, // For any country/region, the '-' key debugger eval code:5:17
    VK_OEM_PERIOD = 0xBE, // For any country/region, the '.' key debugger eval code:5:17
    VK_OEM_2 = 0xBF, // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '/?' key debugger eval code:5:17
    VK_OEM_3 = 0xC0, // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '`~' key debugger eval code:5:17
    // - = 0xC1-D7, // Reserved debugger eval code:5:17
    // - = 0xD8-DA, // Unassigned debugger eval code:5:17
    VK_OEM_4 = 0xDB, // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '[{' key debugger eval code:5:17
    VK_OEM_5 = 0xDC, // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '\|' key debugger eval code:5:17
    VK_OEM_6 = 0xDD, // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ']}' key debugger eval code:5:17
    VK_OEM_7 = 0xDE, // Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the 'single-quote/double-quote' key debugger eval code:5:17
    VK_OEM_8 = 0xDF, // Used for miscellaneous characters; it can vary by keyboard. debugger eval code:5:17
    // - = 0xE0, // Reserved debugger eval code:5:17
    // = 0xE1, // OEM specific debugger eval code:5:17
    VK_OEM_102 = 0xE2, // The <> keys on the US standard keyboard, or the \\| key on the non-US 102-key keyboard debugger eval code:5:17
    // = 0xE3-E4, // OEM specific debugger eval code:5:17
    VK_PROCESSKEY = 0xE5, // IME PROCESS key debugger eval code:5:17
    // = 0xE6, // OEM specific debugger eval code:5:17
    VK_PACKET = 0xE7, // Used to pass Unicode characters as if they were keystrokes. The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KEYUP debugger eval code:5:17
    // - = 0xE8, // Unassigned debugger eval code:5:17
    // = 0xE9-F5, // OEM specific debugger eval code:5:17
    VK_ATTN = 0xF6, // Attn key debugger eval code:5:17
    VK_CRSEL = 0xF7, // CrSel key debugger eval code:5:17
    VK_EXSEL = 0xF8, // ExSel key debugger eval code:5:17
    VK_EREOF = 0xF9, // Erase EOF key debugger eval code:5:17
    VK_PLAY = 0xFA, // Play key debugger eval code:5:17
    VK_ZOOM = 0xFB, // Zoom key debugger eval code:5:17
    VK_NONAME = 0xFC, // Reserved debugger eval code:5:17
    VK_PA1 = 0xFD, // PA1 key debugger eval code:5:17
    VK_OEM_CLEAR = 0xFE, // Clear key
}